<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Campground</title>
  </head>
  <body>
    <form action="/campgrounds/<%= campground._id %>?_method=PUT" method="POST">
      <div>
        <label for="title">Title</label>
        <input
          type="text"
          id="title"
          name="campground[title]"
          value="<%= campground.title %>"
        />
      </div>
      <%/* If we do, name="campground[title]" then the parsing of the form data
      in Express will make the value available in the backend route under
      req.body.campground.title Similarly, name="campground[location]" will be
      made available under req.body.campground.location in the route to which
      the form was submitted. That way we can directly pass the
      req.body.campground object in the create/POST route in a really clear and
      explicit way (req.body.campground would be the campground object we
      constructed on req.body that contains the property names that match the
      property names from the model schema, so mongoose/MongoDB knows under
      which properties to save the values automatically). That specific name
      attribute syntax (with the square brackets construct) is related to the
      urlencoded extended option that we set in in our app code, you can read
      more */%>
      <div>
        <label for="location">Location</label>
        <input
          type="text"
          id="location"
          name="campground[location]"
          value="<%= campground.location %>"
        />
      </div>
      <button>Update Campground</button>
    </form>
    <a href="/campgrounds/<%= campground._id %>">Back to campground</a>
  </body>
</html>
